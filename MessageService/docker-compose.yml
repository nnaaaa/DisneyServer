version: '3.9'

services:
  # server:
  #   build: ./server
  #   command: npm run start:dev
  #   volumes:
  #     - ./server:/app
  #     - /app/node_modules
  #   ports:
  #     - 5000:5000
  #   environment:
  #     MYSQL_HOST: database
  #     MYSQL_USER: root
  #     MYSQL_PASSWORD: dummyguys
  #     MYSQL_DB: disney
  #   depends_on:
  #     - database

  gateway:
    build: ./Gateway
    command: npm run start:dev
    volumes:
      - ./Gateway:/app/Gateway
      - /app/Gateway/node_modules
    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}
    environment:
      MYSQL_HOST: database
      MYSQL_USER: root
      MYSQL_PASSWORD: dummyguys
      MYSQL_DB: disney
      MESSAGE_BROKER_PORT: ${KAFKA_DOCKER_PORT}
      MESSAGE_BROKER_HOST: kafka
    depends_on:
      - kafka
      - database
      - message-server

  message-server:
    build: ./MessageService
    command: npm run start:dev
    volumes:
      - ./MessageService:/app/MessageService
      - /app/MessageService/node_modules
    environment:
      MYSQL_HOST: database
      MYSQL_USER: root
      MYSQL_PASSWORD: dummyguys
      MYSQL_DB: disney
      MESSAGE_BROKER_PORT: ${KAFKA_DOCKER_PORT}
      MESSAGE_BROKER_HOST: kafka
    depends_on:
      - kafka
      - database

  database:
    image: mysql:5.7
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: dummyguys
      MYSQL_DATABASE: disney

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:4.7
    ports:
      - 8082:80
    environment:
      MYSQL_ROOT_PASSWORD: dummyguys
      PMA_HOST: database
      PMA_USER: root
      PMA_PASSWORD: dummyguys

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_DOCKER_PORT}
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:${ZOOKEEPER_DOCKER_PORT}

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_DOCKER_PORT}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:${KAFKA_DOCKER_PORT},PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    stdin_open: true
    depends_on:
      - kafka
    ports:
      - 9000:9000
    environment:
      SERVER_PORT: 9000
      KAFKA_BROKERCONNECT: kafka:${KAFKA_DOCKER_PORT}

volumes:
  mysql-data:
